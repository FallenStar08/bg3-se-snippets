{
    "Activated": {
        "body": [
            "Ext.Osiris.RegisterListener(\"Activated\", 1, \"after\", function(object) $1 end)"
        ],
        "description": "activated listener",
        "prefix": "activated",
        "scope": "lua"
    },
    "ActorSpeakerIndexChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ActorSpeakerIndexChanged\", 4, \"after\", function(instanceID, player, oldIndex, newIndex) $1 end)"
        ],
        "description": "actorspeakerindexchanged listener",
        "prefix": "actorspeakerindexchanged",
        "scope": "lua"
    },
    "AddedTo": {
        "body": [
            "Ext.Osiris.RegisterListener(\"AddedTo\", 3, \"after\", function(object, inventoryHolder, addType) $1 end)"
        ],
        "description": "addedto listener",
        "prefix": "addedto",
        "scope": "lua"
    },
    "AllLoadedFlagsInPresetReceivedEvent": {
        "body": [
            "Ext.Osiris.RegisterListener(\"AllLoadedFlagsInPresetReceivedEvent\", 1, \"after\", function() $1 end)"
        ],
        "description": "allloadedflagsinpresetreceivedevent listener",
        "prefix": "allloadedflagsinpresetreceivedevent",
        "scope": "lua"
    },
    "AnimationEvent": {
        "body": [
            "Ext.Osiris.RegisterListener(\"AnimationEvent\", 3, \"after\", function(object, eventName, wasFromLoad) $1 end)"
        ],
        "description": "animationevent listener",
        "prefix": "animationevent",
        "scope": "lua"
    },
    "AppearTeleportFailed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"AppearTeleportFailed\", 2, \"after\", function(character, appearEvent) $1 end)"
        ],
        "description": "appearteleportfailed listener",
        "prefix": "appearteleportfailed",
        "scope": "lua"
    },
    "ApprovalRatingChangeAttempt": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ApprovalRatingChangeAttempt\", 5, \"after\", function(ratingOwner, ratedEntity, attemptedApprovalChange, clampedApprovalChange, newApproval) $1 end)"
        ],
        "description": "approvalratingchangeattempt listener",
        "prefix": "approvalratingchangeattempt",
        "scope": "lua"
    },
    "ApprovalRatingChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ApprovalRatingChanged\", 3, \"after\", function(ratingOwner, ratedEntity, newApproval) $1 end)"
        ],
        "description": "approvalratingchanged listener",
        "prefix": "approvalratingchanged",
        "scope": "lua"
    },
    "ArmedTrapUsed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ArmedTrapUsed\", 2, \"after\", function(character, item) $1 end)"
        ],
        "description": "armedtrapused listener",
        "prefix": "armedtrapused",
        "scope": "lua"
    },
    "ArmorSetChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ArmorSetChanged\", 2, \"after\", function(character, eArmorSet) $1 end)"
        ],
        "description": "armorsetchanged listener",
        "prefix": "armorsetchanged",
        "scope": "lua"
    },
    "AttachedToPartyGroup": {
        "body": [
            "Ext.Osiris.RegisterListener(\"AttachedToPartyGroup\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "attachedtopartygroup listener",
        "prefix": "attachedtopartygroup",
        "scope": "lua"
    },
    "AttackedBy": {
        "body": [
            "Ext.Osiris.RegisterListener(\"AttackedBy\", 7, \"after\", function(defender, attackerOwner, attacker2, damageType, damageAmount, damageCause, storyActionID) $1 end)"
        ],
        "description": "attackedby listener",
        "prefix": "attackedby",
        "scope": "lua"
    },
    "AttemptedDisarm": {
        "body": [
            "Ext.Osiris.RegisterListener(\"AttemptedDisarm\", 4, \"after\", function(disarmableItem, character, itemUsedToDisarm, bool) $1 end)"
        ],
        "description": "attempteddisarm listener",
        "prefix": "attempteddisarm",
        "scope": "lua"
    },
    "AutomatedDialogEnded": {
        "body": [
            "Ext.Osiris.RegisterListener(\"AutomatedDialogEnded\", 2, \"after\", function(dialog, instanceID) $1 end)"
        ],
        "description": "automateddialogended listener",
        "prefix": "automateddialogended",
        "scope": "lua"
    },
    "AutomatedDialogForceStopping": {
        "body": [
            "Ext.Osiris.RegisterListener(\"AutomatedDialogForceStopping\", 2, \"after\", function(dialog, instanceID) $1 end)"
        ],
        "description": "automateddialogforcestopping listener",
        "prefix": "automateddialogforcestopping",
        "scope": "lua"
    },
    "AutomatedDialogRequestFailed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"AutomatedDialogRequestFailed\", 2, \"after\", function(dialog, instanceID) $1 end)"
        ],
        "description": "automateddialogrequestfailed listener",
        "prefix": "automateddialogrequestfailed",
        "scope": "lua"
    },
    "AutomatedDialogStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"AutomatedDialogStarted\", 2, \"after\", function(dialog, instanceID) $1 end)"
        ],
        "description": "automateddialogstarted listener",
        "prefix": "automateddialogstarted",
        "scope": "lua"
    },
    "BackgroundGoalFailed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"BackgroundGoalFailed\", 2, \"after\", function(character, goal) $1 end)"
        ],
        "description": "backgroundgoalfailed listener",
        "prefix": "backgroundgoalfailed",
        "scope": "lua"
    },
    "BackgroundGoalRewarded": {
        "body": [
            "Ext.Osiris.RegisterListener(\"BackgroundGoalRewarded\", 2, \"after\", function(character, goal) $1 end)"
        ],
        "description": "backgroundgoalrewarded listener",
        "prefix": "backgroundgoalrewarded",
        "scope": "lua"
    },
    "BaseFactionChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"BaseFactionChanged\", 3, \"after\", function(target, oldFaction, newFaction) $1 end)"
        ],
        "description": "basefactionchanged listener",
        "prefix": "basefactionchanged",
        "scope": "lua"
    },
    "CameraReachedNode": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CameraReachedNode\", 5, \"after\", function(spline, character, event, index, last) $1 end)"
        ],
        "description": "camerareachednode listener",
        "prefix": "camerareachednode",
        "scope": "lua"
    },
    "CanBeLootedCapabilityChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CanBeLootedCapabilityChanged\", 2, \"after\", function(lootingTarget, canBeLooted) $1 end)"
        ],
        "description": "canbelootedcapabilitychanged listener",
        "prefix": "canbelootedcapabilitychanged",
        "scope": "lua"
    },
    "CastSpell": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CastSpell\", 5, \"after\", function(caster, spell, spellType, spellElement, storyActionID) $1 end)"
        ],
        "description": "castspell listener",
        "prefix": "castspell",
        "scope": "lua"
    },
    "CastSpellFailed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CastSpellFailed\", 5, \"after\", function(caster, spell, spellType, spellElement, storyActionID) $1 end)"
        ],
        "description": "castspellfailed listener",
        "prefix": "castspellfailed",
        "scope": "lua"
    },
    "CastedSpell": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CastedSpell\", 5, \"after\", function(caster, spell, spellType, spellElement, storyActionID) $1 end)"
        ],
        "description": "castedspell listener",
        "prefix": "castedspell",
        "scope": "lua"
    },
    "ChangeAppearanceCancelled": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ChangeAppearanceCancelled\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "changeappearancecancelled listener",
        "prefix": "changeappearancecancelled",
        "scope": "lua"
    },
    "ChangeAppearanceCompleted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ChangeAppearanceCompleted\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "changeappearancecompleted listener",
        "prefix": "changeappearancecompleted",
        "scope": "lua"
    },
    "CharacterCreationFinished": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterCreationFinished\", 1, \"after\", function() $1 end)"
        ],
        "description": "charactercreationfinished listener",
        "prefix": "charactercreationfinished",
        "scope": "lua"
    },
    "CharacterCreationStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterCreationStarted\", 1, \"after\", function() $1 end)"
        ],
        "description": "charactercreationstarted listener",
        "prefix": "charactercreationstarted",
        "scope": "lua"
    },
    "CharacterDisarmed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterDisarmed\", 3, \"after\", function(character, item, slotName) $1 end)"
        ],
        "description": "characterdisarmed listener",
        "prefix": "characterdisarmed",
        "scope": "lua"
    },
    "CharacterJoinedParty": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterJoinedParty\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "characterjoinedparty listener",
        "prefix": "characterjoinedparty",
        "scope": "lua"
    },
    "CharacterLeftParty": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterLeftParty\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "characterleftparty listener",
        "prefix": "characterleftparty",
        "scope": "lua"
    },
    "CharacterLoadedInPreset": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterLoadedInPreset\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "characterloadedinpreset listener",
        "prefix": "characterloadedinpreset",
        "scope": "lua"
    },
    "CharacterLootedCharacter": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterLootedCharacter\", 2, \"after\", function(player, lootedCharacter) $1 end)"
        ],
        "description": "characterlootedcharacter listener",
        "prefix": "characterlootedcharacter",
        "scope": "lua"
    },
    "CharacterMadePlayer": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterMadePlayer\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "charactermadeplayer listener",
        "prefix": "charactermadeplayer",
        "scope": "lua"
    },
    "CharacterMoveFailedUseJump": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterMoveFailedUseJump\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "charactermovefailedusejump listener",
        "prefix": "charactermovefailedusejump",
        "scope": "lua"
    },
    "CharacterMoveToAndTalkFailed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterMoveToAndTalkFailed\", 4, \"after\", function(character, target, moveID, failureReason) $1 end)"
        ],
        "description": "charactermovetoandtalkfailed listener",
        "prefix": "charactermovetoandtalkfailed",
        "scope": "lua"
    },
    "CharacterMoveToAndTalkRequestDialog": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterMoveToAndTalkRequestDialog\", 4, \"after\", function(character, target, dialog, moveID) $1 end)"
        ],
        "description": "charactermovetoandtalkrequestdialog listener",
        "prefix": "charactermovetoandtalkrequestdialog",
        "scope": "lua"
    },
    "CharacterMoveToCancelled": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterMoveToCancelled\", 2, \"after\", function(character, moveID) $1 end)"
        ],
        "description": "charactermovetocancelled listener",
        "prefix": "charactermovetocancelled",
        "scope": "lua"
    },
    "CharacterOnCrimeSensibleActionNotification": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterOnCrimeSensibleActionNotification\", 10, \"after\", function(character, crimeRegion, crimeID, priortiyName, primaryDialog, criminal1, criminal2, criminal3, criminal4, isPrimary) $1 end)"
        ],
        "description": "characteroncrimesensibleactionnotification listener",
        "prefix": "characteroncrimesensibleactionnotification",
        "scope": "lua"
    },
    "CharacterPickpocketFailed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterPickpocketFailed\", 2, \"after\", function(player, npc) $1 end)"
        ],
        "description": "characterpickpocketfailed listener",
        "prefix": "characterpickpocketfailed",
        "scope": "lua"
    },
    "CharacterPickpocketSuccess": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterPickpocketSuccess\", 6, \"after\", function(player, npc, item, itemTemplate, amount, goldValue) $1 end)"
        ],
        "description": "characterpickpocketsuccess listener",
        "prefix": "characterpickpocketsuccess",
        "scope": "lua"
    },
    "CharacterReservedUserIDChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterReservedUserIDChanged\", 3, \"after\", function(character, oldUserID, newUserID) $1 end)"
        ],
        "description": "characterreserveduseridchanged listener",
        "prefix": "characterreserveduseridchanged",
        "scope": "lua"
    },
    "CharacterSelectedAsBestUnavailableFallbackLead": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterSelectedAsBestUnavailableFallbackLead\", 4, \"after\", function(character, crimeRegion, unavailableForCrimeID, busyCrimeID) $1 end)"
        ],
        "description": "characterselectedasbestunavailablefallbacklead listener",
        "prefix": "characterselectedasbestunavailablefallbacklead",
        "scope": "lua"
    },
    "CharacterSelectedClimbOn": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterSelectedClimbOn\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "characterselectedclimbon listener",
        "prefix": "characterselectedclimbon",
        "scope": "lua"
    },
    "CharacterSelectedForUser": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterSelectedForUser\", 2, \"after\", function(character, userID) $1 end)"
        ],
        "description": "characterselectedforuser listener",
        "prefix": "characterselectedforuser",
        "scope": "lua"
    },
    "CharacterStoleItem": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterStoleItem\", 10, \"after\", function(character, item, itemRootTemplate, x, y, z, oldOwner, srcContainer, amount, goldValue) $1 end)"
        ],
        "description": "characterstoleitem listener",
        "prefix": "characterstoleitem",
        "scope": "lua"
    },
    "CharacterTagEvent": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CharacterTagEvent\", 3, \"after\", function(character, tag, event) $1 end)"
        ],
        "description": "charactertagevent listener",
        "prefix": "charactertagevent",
        "scope": "lua"
    },
    "Closed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"Closed\", 1, \"after\", function(item) $1 end)"
        ],
        "description": "closed listener",
        "prefix": "closed",
        "scope": "lua"
    },
    "CombatEnded": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CombatEnded\", 1, \"after\", function(combatGuid) $1 end)"
        ],
        "description": "combatended listener",
        "prefix": "combatended",
        "scope": "lua"
    },
    "CombatPaused": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CombatPaused\", 1, \"after\", function(combatGuid) $1 end)"
        ],
        "description": "combatpaused listener",
        "prefix": "combatpaused",
        "scope": "lua"
    },
    "CombatResumed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CombatResumed\", 1, \"after\", function(combatGuid) $1 end)"
        ],
        "description": "combatresumed listener",
        "prefix": "combatresumed",
        "scope": "lua"
    },
    "CombatRoundStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CombatRoundStarted\", 2, \"after\", function(combatGuid, round) $1 end)"
        ],
        "description": "combatroundstarted listener",
        "prefix": "combatroundstarted",
        "scope": "lua"
    },
    "CombatStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CombatStarted\", 1, \"after\", function(combatGuid) $1 end)"
        ],
        "description": "combatstarted listener",
        "prefix": "combatstarted",
        "scope": "lua"
    },
    "Combined": {
        "body": [
            "Ext.Osiris.RegisterListener(\"Combined\", 7, \"after\", function(item1, item2, item3, item4, item5, character, newItem) $1 end)"
        ],
        "description": "combined listener",
        "prefix": "combined",
        "scope": "lua"
    },
    "CompanionSelectedForUser": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CompanionSelectedForUser\", 2, \"after\", function(character, userID) $1 end)"
        ],
        "description": "companionselectedforuser listener",
        "prefix": "companionselectedforuser",
        "scope": "lua"
    },
    "CreditsEnded": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CreditsEnded\", 1, \"after\", function() $1 end)"
        ],
        "description": "creditsended listener",
        "prefix": "creditsended",
        "scope": "lua"
    },
    "CrimeDisabled": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CrimeDisabled\", 2, \"after\", function(character, crime) $1 end)"
        ],
        "description": "crimedisabled listener",
        "prefix": "crimedisabled",
        "scope": "lua"
    },
    "CrimeEnabled": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CrimeEnabled\", 2, \"after\", function(character, crime) $1 end)"
        ],
        "description": "crimeenabled listener",
        "prefix": "crimeenabled",
        "scope": "lua"
    },
    "CrimeIsRegistered": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CrimeIsRegistered\", 8, \"after\", function(victim, crimeType, crimeID, evidence, criminal1, criminal2, criminal3, criminal4) $1 end)"
        ],
        "description": "crimeisregistered listener",
        "prefix": "crimeisregistered",
        "scope": "lua"
    },
    "CrimeProcessingStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CrimeProcessingStarted\", 2, \"after\", function(crimeID, actedOnImmediately) $1 end)"
        ],
        "description": "crimeprocessingstarted listener",
        "prefix": "crimeprocessingstarted",
        "scope": "lua"
    },
    "CriticalHitBy": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CriticalHitBy\", 4, \"after\", function(defender, attackOwner, attacker, storyActionID) $1 end)"
        ],
        "description": "criticalhitby listener",
        "prefix": "criticalhitby",
        "scope": "lua"
    },
    "CustomBookUIClosed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"CustomBookUIClosed\", 2, \"after\", function(character, bookName) $1 end)"
        ],
        "description": "custombookuiclosed listener",
        "prefix": "custombookuiclosed",
        "scope": "lua"
    },
    "DLCUpdated": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DLCUpdated\", 3, \"after\", function(dlc, userID, installed) $1 end)"
        ],
        "description": "dlcupdated listener",
        "prefix": "dlcupdated",
        "scope": "lua"
    },
    "Deactivated": {
        "body": [
            "Ext.Osiris.RegisterListener(\"Deactivated\", 1, \"after\", function(object) $1 end)"
        ],
        "description": "deactivated listener",
        "prefix": "deactivated",
        "scope": "lua"
    },
    "DeathSaveStable": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DeathSaveStable\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "deathsavestable listener",
        "prefix": "deathsavestable",
        "scope": "lua"
    },
    "DestroyedBy": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DestroyedBy\", 4, \"after\", function(item, destroyer, destroyerOwner, storyActionID) $1 end)"
        ],
        "description": "destroyedby listener",
        "prefix": "destroyedby",
        "scope": "lua"
    },
    "DestroyingBy": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DestroyingBy\", 4, \"after\", function(item, destroyer, destroyerOwner, storyActionID) $1 end)"
        ],
        "description": "destroyingby listener",
        "prefix": "destroyingby",
        "scope": "lua"
    },
    "DetachedFromPartyGroup": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DetachedFromPartyGroup\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "detachedfrompartygroup listener",
        "prefix": "detachedfrompartygroup",
        "scope": "lua"
    },
    "DialogActorJoinFailed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DialogActorJoinFailed\", 3, \"after\", function(dialog, instanceID, actor) $1 end)"
        ],
        "description": "dialogactorjoinfailed listener",
        "prefix": "dialogactorjoinfailed",
        "scope": "lua"
    },
    "DialogActorJoined": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DialogActorJoined\", 4, \"after\", function(dialog, instanceID, actor, speakerIndex) $1 end)"
        ],
        "description": "dialogactorjoined listener",
        "prefix": "dialogactorjoined",
        "scope": "lua"
    },
    "DialogActorLeft": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DialogActorLeft\", 4, \"after\", function(dialog, instanceID, actor, instanceEnded) $1 end)"
        ],
        "description": "dialogactorleft listener",
        "prefix": "dialogactorleft",
        "scope": "lua"
    },
    "DialogAttackRequested": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DialogAttackRequested\", 2, \"after\", function(target, player) $1 end)"
        ],
        "description": "dialogattackrequested listener",
        "prefix": "dialogattackrequested",
        "scope": "lua"
    },
    "DialogEnded": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DialogEnded\", 2, \"after\", function(dialog, instanceID) $1 end)"
        ],
        "description": "dialogended listener",
        "prefix": "dialogended",
        "scope": "lua"
    },
    "DialogForceStopping": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DialogForceStopping\", 2, \"after\", function(dialog, instanceID) $1 end)"
        ],
        "description": "dialogforcestopping listener",
        "prefix": "dialogforcestopping",
        "scope": "lua"
    },
    "DialogRequestFailed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DialogRequestFailed\", 2, \"after\", function(dialog, instanceID) $1 end)"
        ],
        "description": "dialogrequestfailed listener",
        "prefix": "dialogrequestfailed",
        "scope": "lua"
    },
    "DialogRollResult": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DialogRollResult\", 5, \"after\", function(character, success, dialog, isDetectThoughts, criticality) $1 end)"
        ],
        "description": "dialogrollresult listener",
        "prefix": "dialogrollresult",
        "scope": "lua"
    },
    "DialogStartRequested": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DialogStartRequested\", 2, \"after\", function(target, player) $1 end)"
        ],
        "description": "dialogstartrequested listener",
        "prefix": "dialogstartrequested",
        "scope": "lua"
    },
    "DialogStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DialogStarted\", 2, \"after\", function(dialog, instanceID) $1 end)"
        ],
        "description": "dialogstarted listener",
        "prefix": "dialogstarted",
        "scope": "lua"
    },
    "DialogueCapabilityChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DialogueCapabilityChanged\", 2, \"after\", function(character, isEnabled) $1 end)"
        ],
        "description": "dialoguecapabilitychanged listener",
        "prefix": "dialoguecapabilitychanged",
        "scope": "lua"
    },
    "Died": {
        "body": [
            "Ext.Osiris.RegisterListener(\"Died\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "died listener",
        "prefix": "died",
        "scope": "lua"
    },
    "DifficultyChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DifficultyChanged\", 1, \"after\", function(difficultyLevel) $1 end)"
        ],
        "description": "difficultychanged listener",
        "prefix": "difficultychanged",
        "scope": "lua"
    },
    "DisappearOutOfSightToCancelled": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DisappearOutOfSightToCancelled\", 2, \"after\", function(character, moveID) $1 end)"
        ],
        "description": "disappearoutofsighttocancelled listener",
        "prefix": "disappearoutofsighttocancelled",
        "scope": "lua"
    },
    "DoorTemplateClosing": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DoorTemplateClosing\", 3, \"after\", function(itemTemplate, item2, character) $1 end)"
        ],
        "description": "doortemplateclosing listener",
        "prefix": "doortemplateclosing",
        "scope": "lua"
    },
    "DownedChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DownedChanged\", 2, \"after\", function(character, isDowned) $1 end)"
        ],
        "description": "downedchanged listener",
        "prefix": "downedchanged",
        "scope": "lua"
    },
    "DroppedBy": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DroppedBy\", 2, \"after\", function(object, mover) $1 end)"
        ],
        "description": "droppedby listener",
        "prefix": "droppedby",
        "scope": "lua"
    },
    "DualEntityEvent": {
        "body": [
            "Ext.Osiris.RegisterListener(\"DualEntityEvent\", 3, \"after\", function(object1, object2, event) $1 end)"
        ],
        "description": "dualentityevent listener",
        "prefix": "dualentityevent",
        "scope": "lua"
    },
    "Dying": {
        "body": [
            "Ext.Osiris.RegisterListener(\"Dying\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "dying listener",
        "prefix": "dying",
        "scope": "lua"
    },
    "EndTheDayRequested": {
        "body": [
            "Ext.Osiris.RegisterListener(\"EndTheDayRequested\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "endthedayrequested listener",
        "prefix": "endthedayrequested",
        "scope": "lua"
    },
    "EnterCombatFailed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"EnterCombatFailed\", 2, \"after\", function(opponentLeft, opponentRight) $1 end)"
        ],
        "description": "entercombatfailed listener",
        "prefix": "entercombatfailed",
        "scope": "lua"
    },
    "EnteredChasm": {
        "body": [
            "Ext.Osiris.RegisterListener(\"EnteredChasm\", 6, \"after\", function(object, cause, chasm, fallbackPosX, fallbackPosY, fallbackPosZ) $1 end)"
        ],
        "description": "enteredchasm listener",
        "prefix": "enteredchasm",
        "scope": "lua"
    },
    "EnteredCombat": {
        "body": [
            "Ext.Osiris.RegisterListener(\"EnteredCombat\", 2, \"after\", function(object, combatGuid) $1 end)"
        ],
        "description": "enteredcombat listener",
        "prefix": "enteredcombat",
        "scope": "lua"
    },
    "EnteredForceTurnBased": {
        "body": [
            "Ext.Osiris.RegisterListener(\"EnteredForceTurnBased\", 1, \"after\", function(object) $1 end)"
        ],
        "description": "enteredforceturnbased listener",
        "prefix": "enteredforceturnbased",
        "scope": "lua"
    },
    "EnteredLevel": {
        "body": [
            "Ext.Osiris.RegisterListener(\"EnteredLevel\", 3, \"after\", function(object, objectRootTemplate, level) $1 end)"
        ],
        "description": "enteredlevel listener",
        "prefix": "enteredlevel",
        "scope": "lua"
    },
    "EnteredSharedForceTurnBased": {
        "body": [
            "Ext.Osiris.RegisterListener(\"EnteredSharedForceTurnBased\", 2, \"after\", function(object, zoneId) $1 end)"
        ],
        "description": "enteredsharedforceturnbased listener",
        "prefix": "enteredsharedforceturnbased",
        "scope": "lua"
    },
    "EnteredTrigger": {
        "body": [
            "Ext.Osiris.RegisterListener(\"EnteredTrigger\", 2, \"after\", function(character, trigger) $1 end)"
        ],
        "description": "enteredtrigger listener",
        "prefix": "enteredtrigger",
        "scope": "lua"
    },
    "EntityEvent": {
        "body": [
            "Ext.Osiris.RegisterListener(\"EntityEvent\", 2, \"after\", function(object, event) $1 end)"
        ],
        "description": "entityevent listener",
        "prefix": "entityevent",
        "scope": "lua"
    },
    "EquipFailed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"EquipFailed\", 2, \"after\", function(item, character) $1 end)"
        ],
        "description": "equipfailed listener",
        "prefix": "equipfailed",
        "scope": "lua"
    },
    "Equipped": {
        "body": [
            "Ext.Osiris.RegisterListener(\"Equipped\", 2, \"after\", function(item, character) $1 end)"
        ],
        "description": "equipped listener",
        "prefix": "equipped",
        "scope": "lua"
    },
    "EscortGroupLeaderChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"EscortGroupLeaderChanged\", 3, \"after\", function(oldLeader, newLeader, group) $1 end)"
        ],
        "description": "escortgroupleaderchanged listener",
        "prefix": "escortgroupleaderchanged",
        "scope": "lua"
    },
    "FailedToLoadItemInPreset": {
        "body": [
            "Ext.Osiris.RegisterListener(\"FailedToLoadItemInPreset\", 4, \"after\", function(character, originalItem, level, newItem) $1 end)"
        ],
        "description": "failedtoloaditeminpreset listener",
        "prefix": "failedtoloaditeminpreset",
        "scope": "lua"
    },
    "Falling": {
        "body": [
            "Ext.Osiris.RegisterListener(\"Falling\", 2, \"after\", function(entity, cause) $1 end)"
        ],
        "description": "falling listener",
        "prefix": "falling",
        "scope": "lua"
    },
    "Fell": {
        "body": [
            "Ext.Osiris.RegisterListener(\"Fell\", 2, \"after\", function(entity, cause) $1 end)"
        ],
        "description": "fell listener",
        "prefix": "fell",
        "scope": "lua"
    },
    "FlagCleared": {
        "body": [
            "Ext.Osiris.RegisterListener(\"FlagCleared\", 3, \"after\", function(flag, speaker, dialogInstance) $1 end)"
        ],
        "description": "flagcleared listener",
        "prefix": "flagcleared",
        "scope": "lua"
    },
    "FlagLoadedInPresetEvent": {
        "body": [
            "Ext.Osiris.RegisterListener(\"FlagLoadedInPresetEvent\", 2, \"after\", function(object, flag) $1 end)"
        ],
        "description": "flagloadedinpresetevent listener",
        "prefix": "flagloadedinpresetevent",
        "scope": "lua"
    },
    "FlagSet": {
        "body": [
            "Ext.Osiris.RegisterListener(\"FlagSet\", 3, \"after\", function(flag, speaker, dialogInstance) $1 end)"
        ],
        "description": "flagset listener",
        "prefix": "flagset",
        "scope": "lua"
    },
    "FleeFromCombat": {
        "body": [
            "Ext.Osiris.RegisterListener(\"FleeFromCombat\", 2, \"after\", function(participant, combatGuid) $1 end)"
        ],
        "description": "fleefromcombat listener",
        "prefix": "fleefromcombat",
        "scope": "lua"
    },
    "FollowerCantUseItem": {
        "body": [
            "Ext.Osiris.RegisterListener(\"FollowerCantUseItem\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "followercantuseitem listener",
        "prefix": "followercantuseitem",
        "scope": "lua"
    },
    "ForceDismissCompanion": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ForceDismissCompanion\", 1, \"after\", function(companion) $1 end)"
        ],
        "description": "forcedismisscompanion listener",
        "prefix": "forcedismisscompanion",
        "scope": "lua"
    },
    "ForceMoveEnded": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ForceMoveEnded\", 3, \"after\", function(source, target, storyActionID) $1 end)"
        ],
        "description": "forcemoveended listener",
        "prefix": "forcemoveended",
        "scope": "lua"
    },
    "ForceMoveStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ForceMoveStarted\", 3, \"after\", function(source, target, storyActionID) $1 end)"
        ],
        "description": "forcemovestarted listener",
        "prefix": "forcemovestarted",
        "scope": "lua"
    },
    "GainedControl": {
        "body": [
            "Ext.Osiris.RegisterListener(\"GainedControl\", 1, \"after\", function(target) $1 end)"
        ],
        "description": "gainedcontrol listener",
        "prefix": "gainedcontrol",
        "scope": "lua"
    },
    "GameBookInterfaceClosed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"GameBookInterfaceClosed\", 2, \"after\", function(item, character) $1 end)"
        ],
        "description": "gamebookinterfaceclosed listener",
        "prefix": "gamebookinterfaceclosed",
        "scope": "lua"
    },
    "GameModeStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"GameModeStarted\", 3, \"after\", function(gameMode, isEditorMode, isStoryReload) $1 end)"
        ],
        "description": "gamemodestarted listener",
        "prefix": "gamemodestarted",
        "scope": "lua"
    },
    "GameOption": {
        "body": [
            "Ext.Osiris.RegisterListener(\"GameOption\", 2, \"after\", function(key, value) $1 end)"
        ],
        "description": "gameoption listener",
        "prefix": "gameoption",
        "scope": "lua"
    },
    "GoldChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"GoldChanged\", 2, \"after\", function(inventoryHolder, changeAmount) $1 end)"
        ],
        "description": "goldchanged listener",
        "prefix": "goldchanged",
        "scope": "lua"
    },
    "GotUp": {
        "body": [
            "Ext.Osiris.RegisterListener(\"GotUp\", 1, \"after\", function(target) $1 end)"
        ],
        "description": "gotup listener",
        "prefix": "gotup",
        "scope": "lua"
    },
    "HappyWithDeal": {
        "body": [
            "Ext.Osiris.RegisterListener(\"HappyWithDeal\", 4, \"after\", function(character, trader, characterValue, traderValue) $1 end)"
        ],
        "description": "happywithdeal listener",
        "prefix": "happywithdeal",
        "scope": "lua"
    },
    "HenchmanAborted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"HenchmanAborted\", 1, \"after\", function(player) $1 end)"
        ],
        "description": "henchmanaborted listener",
        "prefix": "henchmanaborted",
        "scope": "lua"
    },
    "HenchmanSelected": {
        "body": [
            "Ext.Osiris.RegisterListener(\"HenchmanSelected\", 2, \"after\", function(player, hireling) $1 end)"
        ],
        "description": "henchmanselected listener",
        "prefix": "henchmanselected",
        "scope": "lua"
    },
    "HitProxy": {
        "body": [
            "Ext.Osiris.RegisterListener(\"HitProxy\", 5, \"after\", function(proxy, target, attackerOwner, attacker2, storyActionID) $1 end)"
        ],
        "description": "hitproxy listener",
        "prefix": "hitproxy",
        "scope": "lua"
    },
    "HitpointsChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"HitpointsChanged\", 2, \"after\", function(entity, percentage) $1 end)"
        ],
        "description": "hitpointschanged listener",
        "prefix": "hitpointschanged",
        "scope": "lua"
    },
    "InstanceDialogChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"InstanceDialogChanged\", 4, \"after\", function(instanceID, oldDialog, newDialog, oldDialogStopping) $1 end)"
        ],
        "description": "instancedialogchanged listener",
        "prefix": "instancedialogchanged",
        "scope": "lua"
    },
    "InteractionCapabilityChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"InteractionCapabilityChanged\", 2, \"after\", function(character, isEnabled) $1 end)"
        ],
        "description": "interactioncapabilitychanged listener",
        "prefix": "interactioncapabilitychanged",
        "scope": "lua"
    },
    "InteractionFallback": {
        "body": [
            "Ext.Osiris.RegisterListener(\"InteractionFallback\", 2, \"after\", function(character, item) $1 end)"
        ],
        "description": "interactionfallback listener",
        "prefix": "interactionfallback",
        "scope": "lua"
    },
    "InventoryBoundChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"InventoryBoundChanged\", 2, \"after\", function(item, isBoundToInventory) $1 end)"
        ],
        "description": "inventoryboundchanged listener",
        "prefix": "inventoryboundchanged",
        "scope": "lua"
    },
    "InventorySharingChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"InventorySharingChanged\", 2, \"after\", function(character, sharingEnabled) $1 end)"
        ],
        "description": "inventorysharingchanged listener",
        "prefix": "inventorysharingchanged",
        "scope": "lua"
    },
    "ItemEnteredTrigger": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ItemEnteredTrigger\", 3, \"after\", function(item, trigger, mover) $1 end)"
        ],
        "description": "itementeredtrigger listener",
        "prefix": "itementeredtrigger",
        "scope": "lua"
    },
    "ItemLeftTrigger": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ItemLeftTrigger\", 3, \"after\", function(item, trigger, mover) $1 end)"
        ],
        "description": "itemlefttrigger listener",
        "prefix": "itemlefttrigger",
        "scope": "lua"
    },
    "ItemTeleported": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ItemTeleported\", 7, \"after\", function(target, oldX, oldY, oldZ, newX, newY, newZ) $1 end)"
        ],
        "description": "itemteleported listener",
        "prefix": "itemteleported",
        "scope": "lua"
    },
    "KilledBy": {
        "body": [
            "Ext.Osiris.RegisterListener(\"KilledBy\", 4, \"after\", function(defender, attackOwner, attacker, storyActionID) $1 end)"
        ],
        "description": "killedby listener",
        "prefix": "killedby",
        "scope": "lua"
    },
    "LearnedSpell": {
        "body": [
            "Ext.Osiris.RegisterListener(\"LearnedSpell\", 2, \"after\", function(character, spell) $1 end)"
        ],
        "description": "learnedspell listener",
        "prefix": "learnedspell",
        "scope": "lua"
    },
    "LeftCombat": {
        "body": [
            "Ext.Osiris.RegisterListener(\"LeftCombat\", 2, \"after\", function(object, combatGuid) $1 end)"
        ],
        "description": "leftcombat listener",
        "prefix": "leftcombat",
        "scope": "lua"
    },
    "LeftForceTurnBased": {
        "body": [
            "Ext.Osiris.RegisterListener(\"LeftForceTurnBased\", 1, \"after\", function(object) $1 end)"
        ],
        "description": "leftforceturnbased listener",
        "prefix": "leftforceturnbased",
        "scope": "lua"
    },
    "LeftLevel": {
        "body": [
            "Ext.Osiris.RegisterListener(\"LeftLevel\", 2, \"after\", function(object, level) $1 end)"
        ],
        "description": "leftlevel listener",
        "prefix": "leftlevel",
        "scope": "lua"
    },
    "LeftTrigger": {
        "body": [
            "Ext.Osiris.RegisterListener(\"LeftTrigger\", 2, \"after\", function(character, trigger) $1 end)"
        ],
        "description": "lefttrigger listener",
        "prefix": "lefttrigger",
        "scope": "lua"
    },
    "LevelGameplayStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"LevelGameplayStarted\", 2, \"after\", function(levelName, isEditorMode) $1 end)"
        ],
        "description": "levelgameplaystarted listener",
        "prefix": "levelgameplaystarted",
        "scope": "lua"
    },
    "LevelLoaded": {
        "body": [
            "Ext.Osiris.RegisterListener(\"LevelLoaded\", 1, \"after\", function(newLevel) $1 end)"
        ],
        "description": "levelloaded listener",
        "prefix": "levelloaded",
        "scope": "lua"
    },
    "LevelTemplateLoaded": {
        "body": [
            "Ext.Osiris.RegisterListener(\"LevelTemplateLoaded\", 1, \"after\", function(levelTemplate) $1 end)"
        ],
        "description": "leveltemplateloaded listener",
        "prefix": "leveltemplateloaded",
        "scope": "lua"
    },
    "LevelUnloading": {
        "body": [
            "Ext.Osiris.RegisterListener(\"LevelUnloading\", 1, \"after\", function(level) $1 end)"
        ],
        "description": "levelunloading listener",
        "prefix": "levelunloading",
        "scope": "lua"
    },
    "LeveledUp": {
        "body": [
            "Ext.Osiris.RegisterListener(\"LeveledUp\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "leveledup listener",
        "prefix": "leveledup",
        "scope": "lua"
    },
    "LongRestCancelled": {
        "body": [
            "Ext.Osiris.RegisterListener(\"LongRestCancelled\", 1, \"after\", function() $1 end)"
        ],
        "description": "longrestcancelled listener",
        "prefix": "longrestcancelled",
        "scope": "lua"
    },
    "LongRestFinished": {
        "body": [
            "Ext.Osiris.RegisterListener(\"LongRestFinished\", 1, \"after\", function() $1 end)"
        ],
        "description": "longrestfinished listener",
        "prefix": "longrestfinished",
        "scope": "lua"
    },
    "LongRestStartFailed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"LongRestStartFailed\", 1, \"after\", function() $1 end)"
        ],
        "description": "longreststartfailed listener",
        "prefix": "longreststartfailed",
        "scope": "lua"
    },
    "LongRestStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"LongRestStarted\", 1, \"after\", function() $1 end)"
        ],
        "description": "longreststarted listener",
        "prefix": "longreststarted",
        "scope": "lua"
    },
    "LostSightOf": {
        "body": [
            "Ext.Osiris.RegisterListener(\"LostSightOf\", 2, \"after\", function(character, targetCharacter) $1 end)"
        ],
        "description": "lostsightof listener",
        "prefix": "lostsightof",
        "scope": "lua"
    },
    "MainPerformerStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"MainPerformerStarted\", 2, \"after\", function(character, event) $1 end)"
        ],
        "description": "mainperformerstarted listener",
        "prefix": "mainperformerstarted",
        "scope": "lua"
    },
    "MessageBoxChoiceClosed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"MessageBoxChoiceClosed\", 3, \"after\", function(character, message, resultChoice) $1 end)"
        ],
        "description": "messageboxchoiceclosed listener",
        "prefix": "messageboxchoiceclosed",
        "scope": "lua"
    },
    "MessageBoxClosed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"MessageBoxClosed\", 2, \"after\", function(character, message) $1 end)"
        ],
        "description": "messageboxclosed listener",
        "prefix": "messageboxclosed",
        "scope": "lua"
    },
    "MessageBoxYesNoClosed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"MessageBoxYesNoClosed\", 3, \"after\", function(character, message, result) $1 end)"
        ],
        "description": "messageboxyesnoclosed listener",
        "prefix": "messageboxyesnoclosed",
        "scope": "lua"
    },
    "MissedBy": {
        "body": [
            "Ext.Osiris.RegisterListener(\"MissedBy\", 4, \"after\", function(defender, attackOwner, attacker, storyActionID) $1 end)"
        ],
        "description": "missedby listener",
        "prefix": "missedby",
        "scope": "lua"
    },
    "ModuleLoadedinSavegame": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ModuleLoadedinSavegame\", 5, \"after\", function(name, major, minor, revision, build) $1 end)"
        ],
        "description": "moduleloadedinsavegame listener",
        "prefix": "moduleloadedinsavegame",
        "scope": "lua"
    },
    "MoveCapabilityChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"MoveCapabilityChanged\", 2, \"after\", function(character, isEnabled) $1 end)"
        ],
        "description": "movecapabilitychanged listener",
        "prefix": "movecapabilitychanged",
        "scope": "lua"
    },
    "Moved": {
        "body": [
            "Ext.Osiris.RegisterListener(\"Moved\", 1, \"after\", function(item) $1 end)"
        ],
        "description": "moved listener",
        "prefix": "moved",
        "scope": "lua"
    },
    "MovedBy": {
        "body": [
            "Ext.Osiris.RegisterListener(\"MovedBy\", 2, \"after\", function(movedEntity, character) $1 end)"
        ],
        "description": "movedby listener",
        "prefix": "movedby",
        "scope": "lua"
    },
    "MovedFromTo": {
        "body": [
            "Ext.Osiris.RegisterListener(\"MovedFromTo\", 4, \"after\", function(movedObject, fromObject, toObject, isTrade) $1 end)"
        ],
        "description": "movedfromto listener",
        "prefix": "movedfromto",
        "scope": "lua"
    },
    "MovieFinished": {
        "body": [
            "Ext.Osiris.RegisterListener(\"MovieFinished\", 1, \"after\", function(movieName) $1 end)"
        ],
        "description": "moviefinished listener",
        "prefix": "moviefinished",
        "scope": "lua"
    },
    "MoviePlaylistFinished": {
        "body": [
            "Ext.Osiris.RegisterListener(\"MoviePlaylistFinished\", 1, \"after\", function(movieName) $1 end)"
        ],
        "description": "movieplaylistfinished listener",
        "prefix": "movieplaylistfinished",
        "scope": "lua"
    },
    "NestedDialogPlayed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"NestedDialogPlayed\", 2, \"after\", function(dialog, instanceID) $1 end)"
        ],
        "description": "nesteddialogplayed listener",
        "prefix": "nesteddialogplayed",
        "scope": "lua"
    },
    "ObjectAvailableLevelChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ObjectAvailableLevelChanged\", 3, \"after\", function(character, oldLevel, newLevel) $1 end)"
        ],
        "description": "objectavailablelevelchanged listener",
        "prefix": "objectavailablelevelchanged",
        "scope": "lua"
    },
    "ObjectTimerFinished": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ObjectTimerFinished\", 2, \"after\", function(object, timer) $1 end)"
        ],
        "description": "objecttimerfinished listener",
        "prefix": "objecttimerfinished",
        "scope": "lua"
    },
    "ObjectTransformed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ObjectTransformed\", 2, \"after\", function(object, toTemplate) $1 end)"
        ],
        "description": "objecttransformed listener",
        "prefix": "objecttransformed",
        "scope": "lua"
    },
    "ObscuredStateChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ObscuredStateChanged\", 2, \"after\", function(object, obscuredState) $1 end)"
        ],
        "description": "obscuredstatechanged listener",
        "prefix": "obscuredstatechanged",
        "scope": "lua"
    },
    "OnCrimeConfrontationDone": {
        "body": [
            "Ext.Osiris.RegisterListener(\"OnCrimeConfrontationDone\", 7, \"after\", function(crimeID, investigator, wasLead, criminal1, criminal2, criminal3, criminal4) $1 end)"
        ],
        "description": "oncrimeconfrontationdone listener",
        "prefix": "oncrimeconfrontationdone",
        "scope": "lua"
    },
    "OnCrimeInvestigatorSwitchedState": {
        "body": [
            "Ext.Osiris.RegisterListener(\"OnCrimeInvestigatorSwitchedState\", 4, \"after\", function(crimeID, investigator, fromState, toState) $1 end)"
        ],
        "description": "oncrimeinvestigatorswitchedstate listener",
        "prefix": "oncrimeinvestigatorswitchedstate",
        "scope": "lua"
    },
    "OnCrimeMergedWith": {
        "body": [
            "Ext.Osiris.RegisterListener(\"OnCrimeMergedWith\", 2, \"after\", function(oldCrimeID, newCrimeID) $1 end)"
        ],
        "description": "oncrimemergedwith listener",
        "prefix": "oncrimemergedwith",
        "scope": "lua"
    },
    "OnCrimeRemoved": {
        "body": [
            "Ext.Osiris.RegisterListener(\"OnCrimeRemoved\", 6, \"after\", function(crimeID, victim, criminal1, criminal2, criminal3, criminal4) $1 end)"
        ],
        "description": "oncrimeremoved listener",
        "prefix": "oncrimeremoved",
        "scope": "lua"
    },
    "OnCrimeResetInterrogationForCriminal": {
        "body": [
            "Ext.Osiris.RegisterListener(\"OnCrimeResetInterrogationForCriminal\", 2, \"after\", function(crimeID, criminal) $1 end)"
        ],
        "description": "oncrimeresetinterrogationforcriminal listener",
        "prefix": "oncrimeresetinterrogationforcriminal",
        "scope": "lua"
    },
    "OnCrimeResolved": {
        "body": [
            "Ext.Osiris.RegisterListener(\"OnCrimeResolved\", 6, \"after\", function(crimeID, victim, criminal1, criminal2, criminal3, criminal4) $1 end)"
        ],
        "description": "oncrimeresolved listener",
        "prefix": "oncrimeresolved",
        "scope": "lua"
    },
    "OnCriminalMergedWithCrime": {
        "body": [
            "Ext.Osiris.RegisterListener(\"OnCriminalMergedWithCrime\", 2, \"after\", function(crimeID, criminal) $1 end)"
        ],
        "description": "oncriminalmergedwithcrime listener",
        "prefix": "oncriminalmergedwithcrime",
        "scope": "lua"
    },
    "OnShutdown": {
        "body": [
            "Ext.Osiris.RegisterListener(\"OnShutdown\", 1, \"after\", function(isEditorMode) $1 end)"
        ],
        "description": "onshutdown listener",
        "prefix": "onshutdown",
        "scope": "lua"
    },
    "OnStartCarrying": {
        "body": [
            "Ext.Osiris.RegisterListener(\"OnStartCarrying\", 7, \"after\", function(carriedObject, carriedObjectTemplate, carrier, storyActionID, pickupPosX, pickupPosY, pickupPosZ) $1 end)"
        ],
        "description": "onstartcarrying listener",
        "prefix": "onstartcarrying",
        "scope": "lua"
    },
    "OnStoryOverride": {
        "body": [
            "Ext.Osiris.RegisterListener(\"OnStoryOverride\", 1, \"after\", function(target) $1 end)"
        ],
        "description": "onstoryoverride listener",
        "prefix": "onstoryoverride",
        "scope": "lua"
    },
    "OnThrown": {
        "body": [
            "Ext.Osiris.RegisterListener(\"OnThrown\", 7, \"after\", function(thrownObject, thrownObjectTemplate, thrower, storyActionID, throwPosX, throwPosY, throwPosZ) $1 end)"
        ],
        "description": "onthrown listener",
        "prefix": "onthrown",
        "scope": "lua"
    },
    "Opened": {
        "body": [
            "Ext.Osiris.RegisterListener(\"Opened\", 1, \"after\", function(item) $1 end)"
        ],
        "description": "opened listener",
        "prefix": "opened",
        "scope": "lua"
    },
    "PartyPresetLoaded": {
        "body": [
            "Ext.Osiris.RegisterListener(\"PartyPresetLoaded\", 2, \"after\", function(partyPreset, levelName) $1 end)"
        ],
        "description": "partypresetloaded listener",
        "prefix": "partypresetloaded",
        "scope": "lua"
    },
    "PickupFailed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"PickupFailed\", 2, \"after\", function(character, item) $1 end)"
        ],
        "description": "pickupfailed listener",
        "prefix": "pickupfailed",
        "scope": "lua"
    },
    "PingRequested": {
        "body": [
            "Ext.Osiris.RegisterListener(\"PingRequested\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "pingrequested listener",
        "prefix": "pingrequested",
        "scope": "lua"
    },
    "PlatformDestroyed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"PlatformDestroyed\", 1, \"after\", function(object) $1 end)"
        ],
        "description": "platformdestroyed listener",
        "prefix": "platformdestroyed",
        "scope": "lua"
    },
    "PlatformMovementCanceled": {
        "body": [
            "Ext.Osiris.RegisterListener(\"PlatformMovementCanceled\", 2, \"after\", function(object, eventId) $1 end)"
        ],
        "description": "platformmovementcanceled listener",
        "prefix": "platformmovementcanceled",
        "scope": "lua"
    },
    "PlatformMovementFinished": {
        "body": [
            "Ext.Osiris.RegisterListener(\"PlatformMovementFinished\", 2, \"after\", function(object, eventId) $1 end)"
        ],
        "description": "platformmovementfinished listener",
        "prefix": "platformmovementfinished",
        "scope": "lua"
    },
    "PreMovedBy": {
        "body": [
            "Ext.Osiris.RegisterListener(\"PreMovedBy\", 2, \"after\", function(item, character) $1 end)"
        ],
        "description": "premovedby listener",
        "prefix": "premovedby",
        "scope": "lua"
    },
    "PuzzleUIClosed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"PuzzleUIClosed\", 3, \"after\", function(character, uIInstance, type) $1 end)"
        ],
        "description": "puzzleuiclosed listener",
        "prefix": "puzzleuiclosed",
        "scope": "lua"
    },
    "PuzzleUIUsed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"PuzzleUIUsed\", 5, \"after\", function(character, uIInstance, type, command, elementId) $1 end)"
        ],
        "description": "puzzleuiused listener",
        "prefix": "puzzleuiused",
        "scope": "lua"
    },
    "QuestAccepted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"QuestAccepted\", 2, \"after\", function(character, questID) $1 end)"
        ],
        "description": "questaccepted listener",
        "prefix": "questaccepted",
        "scope": "lua"
    },
    "QuestClosed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"QuestClosed\", 1, \"after\", function(questID) $1 end)"
        ],
        "description": "questclosed listener",
        "prefix": "questclosed",
        "scope": "lua"
    },
    "QuestUpdateUnlocked": {
        "body": [
            "Ext.Osiris.RegisterListener(\"QuestUpdateUnlocked\", 3, \"after\", function(character, topLevelQuestID, stateID) $1 end)"
        ],
        "description": "questupdateunlocked listener",
        "prefix": "questupdateunlocked",
        "scope": "lua"
    },
    "QueuePurged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"QueuePurged\", 1, \"after\", function(object) $1 end)"
        ],
        "description": "queuepurged listener",
        "prefix": "queuepurged",
        "scope": "lua"
    },
    "RandomCastProcessed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RandomCastProcessed\", 5, \"after\", function(caster, storyActionID, spellID, rollResult, randomCastDC) $1 end)"
        ],
        "description": "randomcastprocessed listener",
        "prefix": "randomcastprocessed",
        "scope": "lua"
    },
    "ReactionInterruptActionNeeded": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ReactionInterruptActionNeeded\", 1, \"after\", function(object) $1 end)"
        ],
        "description": "reactioninterruptactionneeded listener",
        "prefix": "reactioninterruptactionneeded",
        "scope": "lua"
    },
    "ReactionInterruptAdded": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ReactionInterruptAdded\", 2, \"after\", function(character, reactionInterruptName) $1 end)"
        ],
        "description": "reactioninterruptadded listener",
        "prefix": "reactioninterruptadded",
        "scope": "lua"
    },
    "ReactionInterruptUsed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ReactionInterruptUsed\", 3, \"after\", function(object, reactionInterruptPrototypeId, isAutoTriggered) $1 end)"
        ],
        "description": "reactioninterruptused listener",
        "prefix": "reactioninterruptused",
        "scope": "lua"
    },
    "ReadyCheckFailed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ReadyCheckFailed\", 1, \"after\", function(id) $1 end)"
        ],
        "description": "readycheckfailed listener",
        "prefix": "readycheckfailed",
        "scope": "lua"
    },
    "ReadyCheckPassed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ReadyCheckPassed\", 1, \"after\", function(id) $1 end)"
        ],
        "description": "readycheckpassed listener",
        "prefix": "readycheckpassed",
        "scope": "lua"
    },
    "RelationChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RelationChanged\", 4, \"after\", function(sourceFaction, targetFaction, newRelation, permanent) $1 end)"
        ],
        "description": "relationchanged listener",
        "prefix": "relationchanged",
        "scope": "lua"
    },
    "RemovedFrom": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RemovedFrom\", 2, \"after\", function(object, inventoryHolder) $1 end)"
        ],
        "description": "removedfrom listener",
        "prefix": "removedfrom",
        "scope": "lua"
    },
    "ReposeAdded": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ReposeAdded\", 2, \"after\", function(entity, onEntity) $1 end)"
        ],
        "description": "reposeadded listener",
        "prefix": "reposeadded",
        "scope": "lua"
    },
    "ReposeRemoved": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ReposeRemoved\", 2, \"after\", function(entity, onEntity) $1 end)"
        ],
        "description": "reposeremoved listener",
        "prefix": "reposeremoved",
        "scope": "lua"
    },
    "RequestCanCombine": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RequestCanCombine\", 7, \"after\", function(character, item1, item2, item3, item4, item5, requestID) $1 end)"
        ],
        "description": "requestcancombine listener",
        "prefix": "requestcancombine",
        "scope": "lua"
    },
    "RequestCanDisarmTrap": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RequestCanDisarmTrap\", 3, \"after\", function(character, item, requestID) $1 end)"
        ],
        "description": "requestcandisarmtrap listener",
        "prefix": "requestcandisarmtrap",
        "scope": "lua"
    },
    "RequestCanLockpick": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RequestCanLockpick\", 3, \"after\", function(character, item, requestID) $1 end)"
        ],
        "description": "requestcanlockpick listener",
        "prefix": "requestcanlockpick",
        "scope": "lua"
    },
    "RequestCanLoot": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RequestCanLoot\", 2, \"after\", function(looter, target) $1 end)"
        ],
        "description": "requestcanloot listener",
        "prefix": "requestcanloot",
        "scope": "lua"
    },
    "RequestCanMove": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RequestCanMove\", 3, \"after\", function(character, item, requestID) $1 end)"
        ],
        "description": "requestcanmove listener",
        "prefix": "requestcanmove",
        "scope": "lua"
    },
    "RequestCanPickup": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RequestCanPickup\", 3, \"after\", function(character, object, requestID) $1 end)"
        ],
        "description": "requestcanpickup listener",
        "prefix": "requestcanpickup",
        "scope": "lua"
    },
    "RequestCanUse": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RequestCanUse\", 3, \"after\", function(character, item, requestID) $1 end)"
        ],
        "description": "requestcanuse listener",
        "prefix": "requestcanuse",
        "scope": "lua"
    },
    "RequestEndTheDayFail": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RequestEndTheDayFail\", 1, \"after\", function() $1 end)"
        ],
        "description": "requestendthedayfail listener",
        "prefix": "requestendthedayfail",
        "scope": "lua"
    },
    "RequestEndTheDaySuccess": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RequestEndTheDaySuccess\", 1, \"after\", function() $1 end)"
        ],
        "description": "requestendthedaysuccess listener",
        "prefix": "requestendthedaysuccess",
        "scope": "lua"
    },
    "RequestGatherAtCampFail": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RequestGatherAtCampFail\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "requestgatheratcampfail listener",
        "prefix": "requestgatheratcampfail",
        "scope": "lua"
    },
    "RequestGatherAtCampSuccess": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RequestGatherAtCampSuccess\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "requestgatheratcampsuccess listener",
        "prefix": "requestgatheratcampsuccess",
        "scope": "lua"
    },
    "RequestPickpocket": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RequestPickpocket\", 2, \"after\", function(player, npc) $1 end)"
        ],
        "description": "requestpickpocket listener",
        "prefix": "requestpickpocket",
        "scope": "lua"
    },
    "RequestTrade": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RequestTrade\", 4, \"after\", function(character, trader, tradeMode, itemsTagFilter) $1 end)"
        ],
        "description": "requesttrade listener",
        "prefix": "requesttrade",
        "scope": "lua"
    },
    "RespecCancelled": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RespecCancelled\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "respeccancelled listener",
        "prefix": "respeccancelled",
        "scope": "lua"
    },
    "RespecCompleted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RespecCompleted\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "respeccompleted listener",
        "prefix": "respeccompleted",
        "scope": "lua"
    },
    "Resurrected": {
        "body": [
            "Ext.Osiris.RegisterListener(\"Resurrected\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "resurrected listener",
        "prefix": "resurrected",
        "scope": "lua"
    },
    "RollResult": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RollResult\", 6, \"after\", function(eventName, roller, rollSubject, resultType, isActiveRoll, criticality) $1 end)"
        ],
        "description": "rollresult listener",
        "prefix": "rollresult",
        "scope": "lua"
    },
    "RulesetModifierChangedBool": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RulesetModifierChangedBool\", 3, \"after\", function(modifier, old, new) $1 end)"
        ],
        "description": "rulesetmodifierchangedbool listener",
        "prefix": "rulesetmodifierchangedbool",
        "scope": "lua"
    },
    "RulesetModifierChangedFloat": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RulesetModifierChangedFloat\", 3, \"after\", function(modifier, old, new) $1 end)"
        ],
        "description": "rulesetmodifierchangedfloat listener",
        "prefix": "rulesetmodifierchangedfloat",
        "scope": "lua"
    },
    "RulesetModifierChangedInt": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RulesetModifierChangedInt\", 3, \"after\", function(modifier, old, new) $1 end)"
        ],
        "description": "rulesetmodifierchangedint listener",
        "prefix": "rulesetmodifierchangedint",
        "scope": "lua"
    },
    "RulesetModifierChangedString": {
        "body": [
            "Ext.Osiris.RegisterListener(\"RulesetModifierChangedString\", 3, \"after\", function(modifier, old, new) $1 end)"
        ],
        "description": "rulesetmodifierchangedstring listener",
        "prefix": "rulesetmodifierchangedstring",
        "scope": "lua"
    },
    "SafeRomanceOptionChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"SafeRomanceOptionChanged\", 2, \"after\", function(userID, state) $1 end)"
        ],
        "description": "saferomanceoptionchanged listener",
        "prefix": "saferomanceoptionchanged",
        "scope": "lua"
    },
    "SavegameLoadStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"SavegameLoadStarted\", 1, \"after\", function() $1 end)"
        ],
        "description": "savegameloadstarted listener",
        "prefix": "savegameloadstarted",
        "scope": "lua"
    },
    "SavegameLoaded": {
        "body": [
            "Ext.Osiris.RegisterListener(\"SavegameLoaded\", 1, \"after\", function() $1 end)"
        ],
        "description": "savegameloaded listener",
        "prefix": "savegameloaded",
        "scope": "lua"
    },
    "Saw": {
        "body": [
            "Ext.Osiris.RegisterListener(\"Saw\", 3, \"after\", function(character, targetCharacter, targetWasSneaking) $1 end)"
        ],
        "description": "saw listener",
        "prefix": "saw",
        "scope": "lua"
    },
    "ScatteredAt": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ScatteredAt\", 4, \"after\", function(item, x, y, z) $1 end)"
        ],
        "description": "scatteredat listener",
        "prefix": "scatteredat",
        "scope": "lua"
    },
    "ScreenFadeCleared": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ScreenFadeCleared\", 2, \"after\", function(userID, fadeID) $1 end)"
        ],
        "description": "screenfadecleared listener",
        "prefix": "screenfadecleared",
        "scope": "lua"
    },
    "ScreenFadeDone": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ScreenFadeDone\", 2, \"after\", function(userID, fadeID) $1 end)"
        ],
        "description": "screenfadedone listener",
        "prefix": "screenfadedone",
        "scope": "lua"
    },
    "ShapeshiftChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ShapeshiftChanged\", 4, \"after\", function(character, race, gender, shapeshiftStatus) $1 end)"
        ],
        "description": "shapeshiftchanged listener",
        "prefix": "shapeshiftchanged",
        "scope": "lua"
    },
    "ShapeshiftedHitpointsChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ShapeshiftedHitpointsChanged\", 2, \"after\", function(entity, percentage) $1 end)"
        ],
        "description": "shapeshiftedhitpointschanged listener",
        "prefix": "shapeshiftedhitpointschanged",
        "scope": "lua"
    },
    "ShareInitiative": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ShareInitiative\", 1, \"after\", function(object) $1 end)"
        ],
        "description": "shareinitiative listener",
        "prefix": "shareinitiative",
        "scope": "lua"
    },
    "ShortRestCapable": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ShortRestCapable\", 2, \"after\", function(character, capable) $1 end)"
        ],
        "description": "shortrestcapable listener",
        "prefix": "shortrestcapable",
        "scope": "lua"
    },
    "ShortRestProcessing": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ShortRestProcessing\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "shortrestprocessing listener",
        "prefix": "shortrestprocessing",
        "scope": "lua"
    },
    "ShortRested": {
        "body": [
            "Ext.Osiris.RegisterListener(\"ShortRested\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "shortrested listener",
        "prefix": "shortrested",
        "scope": "lua"
    },
    "StackedWith": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StackedWith\", 2, \"after\", function(item, stackedWithItem) $1 end)"
        ],
        "description": "stackedwith listener",
        "prefix": "stackedwith",
        "scope": "lua"
    },
    "StartAttack": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StartAttack\", 4, \"after\", function(defender, attackOwner, attacker, storyActionID) $1 end)"
        ],
        "description": "startattack listener",
        "prefix": "startattack",
        "scope": "lua"
    },
    "StartAttackPosition": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StartAttackPosition\", 6, \"after\", function(x, y, z, attackOwner, attacker, storyActionID) $1 end)"
        ],
        "description": "startattackposition listener",
        "prefix": "startattackposition",
        "scope": "lua"
    },
    "StartedDisarmingTrap": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StartedDisarmingTrap\", 2, \"after\", function(character, item) $1 end)"
        ],
        "description": "starteddisarmingtrap listener",
        "prefix": "starteddisarmingtrap",
        "scope": "lua"
    },
    "StartedFleeing": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StartedFleeing\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "startedfleeing listener",
        "prefix": "startedfleeing",
        "scope": "lua"
    },
    "StartedLockpicking": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StartedLockpicking\", 2, \"after\", function(character, item) $1 end)"
        ],
        "description": "startedlockpicking listener",
        "prefix": "startedlockpicking",
        "scope": "lua"
    },
    "StartedPreviewingSpell": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StartedPreviewingSpell\", 4, \"after\", function(caster, spell, isMostPowerful, hasMultipleLevels) $1 end)"
        ],
        "description": "startedpreviewingspell listener",
        "prefix": "startedpreviewingspell",
        "scope": "lua"
    },
    "StatusApplied": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StatusApplied\", 4, \"after\", function(object, status, causee, storyActionID) $1 end)"
        ],
        "description": "statusapplied listener",
        "prefix": "statusapplied",
        "scope": "lua"
    },
    "StatusAttempt": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StatusAttempt\", 4, \"after\", function(object, status, causee, storyActionID) $1 end)"
        ],
        "description": "statusattempt listener",
        "prefix": "statusattempt",
        "scope": "lua"
    },
    "StatusAttemptFailed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StatusAttemptFailed\", 4, \"after\", function(object, status, causee, storyActionID) $1 end)"
        ],
        "description": "statusattemptfailed listener",
        "prefix": "statusattemptfailed",
        "scope": "lua"
    },
    "StatusRemoved": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StatusRemoved\", 4, \"after\", function(object, status, causee, applyStoryActionID) $1 end)"
        ],
        "description": "statusremoved listener",
        "prefix": "statusremoved",
        "scope": "lua"
    },
    "StatusTagCleared": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StatusTagCleared\", 5, \"after\", function(target, tag, sourceOwner, source2, storyActionID) $1 end)"
        ],
        "description": "statustagcleared listener",
        "prefix": "statustagcleared",
        "scope": "lua"
    },
    "StatusTagSet": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StatusTagSet\", 5, \"after\", function(target, tag, sourceOwner, source2, storyActionID) $1 end)"
        ],
        "description": "statustagset listener",
        "prefix": "statustagset",
        "scope": "lua"
    },
    "StoppedCombining": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StoppedCombining\", 6, \"after\", function(character, item1, item2, item3, item4, item5) $1 end)"
        ],
        "description": "stoppedcombining listener",
        "prefix": "stoppedcombining",
        "scope": "lua"
    },
    "StoppedDisarmingTrap": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StoppedDisarmingTrap\", 2, \"after\", function(character, item) $1 end)"
        ],
        "description": "stoppeddisarmingtrap listener",
        "prefix": "stoppeddisarmingtrap",
        "scope": "lua"
    },
    "StoppedLockpicking": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StoppedLockpicking\", 2, \"after\", function(character, item) $1 end)"
        ],
        "description": "stoppedlockpicking listener",
        "prefix": "stoppedlockpicking",
        "scope": "lua"
    },
    "StoppedSneaking": {
        "body": [
            "Ext.Osiris.RegisterListener(\"StoppedSneaking\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "stoppedsneaking listener",
        "prefix": "stoppedsneaking",
        "scope": "lua"
    },
    "SubQuestUpdateUnlocked": {
        "body": [
            "Ext.Osiris.RegisterListener(\"SubQuestUpdateUnlocked\", 3, \"after\", function(character, subQuestID, stateID) $1 end)"
        ],
        "description": "subquestupdateunlocked listener",
        "prefix": "subquestupdateunlocked",
        "scope": "lua"
    },
    "SupplyTemplateSpent": {
        "body": [
            "Ext.Osiris.RegisterListener(\"SupplyTemplateSpent\", 2, \"after\", function(templateId, amount) $1 end)"
        ],
        "description": "supplytemplatespent listener",
        "prefix": "supplytemplatespent",
        "scope": "lua"
    },
    "SwarmAIGroupJoined": {
        "body": [
            "Ext.Osiris.RegisterListener(\"SwarmAIGroupJoined\", 2, \"after\", function(object, group) $1 end)"
        ],
        "description": "swarmaigroupjoined listener",
        "prefix": "swarmaigroupjoined",
        "scope": "lua"
    },
    "SwarmAIGroupLeft": {
        "body": [
            "Ext.Osiris.RegisterListener(\"SwarmAIGroupLeft\", 2, \"after\", function(object, group) $1 end)"
        ],
        "description": "swarmaigroupleft listener",
        "prefix": "swarmaigroupleft",
        "scope": "lua"
    },
    "SwitchedCombat": {
        "body": [
            "Ext.Osiris.RegisterListener(\"SwitchedCombat\", 3, \"after\", function(object, oldCombatGuid, newCombatGuid) $1 end)"
        ],
        "description": "switchedcombat listener",
        "prefix": "switchedcombat",
        "scope": "lua"
    },
    "TadpolePowerAssigned": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TadpolePowerAssigned\", 2, \"after\", function(character, power) $1 end)"
        ],
        "description": "tadpolepowerassigned listener",
        "prefix": "tadpolepowerassigned",
        "scope": "lua"
    },
    "TagCleared": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TagCleared\", 2, \"after\", function(target, tag) $1 end)"
        ],
        "description": "tagcleared listener",
        "prefix": "tagcleared",
        "scope": "lua"
    },
    "TagEvent": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TagEvent\", 2, \"after\", function(tag, event) $1 end)"
        ],
        "description": "tagevent listener",
        "prefix": "tagevent",
        "scope": "lua"
    },
    "TagSet": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TagSet\", 2, \"after\", function(target, tag) $1 end)"
        ],
        "description": "tagset listener",
        "prefix": "tagset",
        "scope": "lua"
    },
    "TeleportToFleeWaypoint": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TeleportToFleeWaypoint\", 2, \"after\", function(character, trigger) $1 end)"
        ],
        "description": "teleporttofleewaypoint listener",
        "prefix": "teleporttofleewaypoint",
        "scope": "lua"
    },
    "TeleportToFromCamp": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TeleportToFromCamp\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "teleporttofromcamp listener",
        "prefix": "teleporttofromcamp",
        "scope": "lua"
    },
    "TeleportToWaypoint": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TeleportToWaypoint\", 2, \"after\", function(character, trigger) $1 end)"
        ],
        "description": "teleporttowaypoint listener",
        "prefix": "teleporttowaypoint",
        "scope": "lua"
    },
    "Teleported": {
        "body": [
            "Ext.Osiris.RegisterListener(\"Teleported\", 9, \"after\", function(target, cause, oldX, oldY, oldZ, newX, newY, newZ, spell) $1 end)"
        ],
        "description": "teleported listener",
        "prefix": "teleported",
        "scope": "lua"
    },
    "TeleportedFromCamp": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TeleportedFromCamp\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "teleportedfromcamp listener",
        "prefix": "teleportedfromcamp",
        "scope": "lua"
    },
    "TeleportedToCamp": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TeleportedToCamp\", 1, \"after\", function(character) $1 end)"
        ],
        "description": "teleportedtocamp listener",
        "prefix": "teleportedtocamp",
        "scope": "lua"
    },
    "TemplateAddedTo": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TemplateAddedTo\", 4, \"after\", function(objectTemplate, object2, inventoryHolder, addType) $1 end)"
        ],
        "description": "templateaddedto listener",
        "prefix": "templateaddedto",
        "scope": "lua"
    },
    "TemplateDestroyedBy": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TemplateDestroyedBy\", 5, \"after\", function(itemTemplate, item2, destroyer, destroyerOwner, storyActionID) $1 end)"
        ],
        "description": "templatedestroyedby listener",
        "prefix": "templatedestroyedby",
        "scope": "lua"
    },
    "TemplateEnteredTrigger": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TemplateEnteredTrigger\", 5, \"after\", function(itemTemplate, item2, trigger, owner, mover) $1 end)"
        ],
        "description": "templateenteredtrigger listener",
        "prefix": "templateenteredtrigger",
        "scope": "lua"
    },
    "TemplateEquipped": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TemplateEquipped\", 2, \"after\", function(itemTemplate, character) $1 end)"
        ],
        "description": "templateequipped listener",
        "prefix": "templateequipped",
        "scope": "lua"
    },
    "TemplateKilledBy": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TemplateKilledBy\", 5, \"after\", function(characterTemplate, defender, attackOwner, attacker, storyActionID) $1 end)"
        ],
        "description": "templatekilledby listener",
        "prefix": "templatekilledby",
        "scope": "lua"
    },
    "TemplateLeftTrigger": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TemplateLeftTrigger\", 5, \"after\", function(itemTemplate, item2, trigger, owner, mover) $1 end)"
        ],
        "description": "templatelefttrigger listener",
        "prefix": "templatelefttrigger",
        "scope": "lua"
    },
    "TemplateOpening": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TemplateOpening\", 3, \"after\", function(itemTemplate, item2, character) $1 end)"
        ],
        "description": "templateopening listener",
        "prefix": "templateopening",
        "scope": "lua"
    },
    "TemplateRemovedFrom": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TemplateRemovedFrom\", 3, \"after\", function(objectTemplate, object2, inventoryHolder) $1 end)"
        ],
        "description": "templateremovedfrom listener",
        "prefix": "templateremovedfrom",
        "scope": "lua"
    },
    "TemplateUnequipped": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TemplateUnequipped\", 2, \"after\", function(itemTemplate, character) $1 end)"
        ],
        "description": "templateunequipped listener",
        "prefix": "templateunequipped",
        "scope": "lua"
    },
    "TemplateUseFinished": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TemplateUseFinished\", 4, \"after\", function(character, itemTemplate, item2, sucess) $1 end)"
        ],
        "description": "templateusefinished listener",
        "prefix": "templateusefinished",
        "scope": "lua"
    },
    "TemplateUseStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TemplateUseStarted\", 3, \"after\", function(character, itemTemplate, item2) $1 end)"
        ],
        "description": "templateusestarted listener",
        "prefix": "templateusestarted",
        "scope": "lua"
    },
    "TemplatesCombined": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TemplatesCombined\", 7, \"after\", function(template1, template2, template3, template4, template5, character, newItem) $1 end)"
        ],
        "description": "templatescombined listener",
        "prefix": "templatescombined",
        "scope": "lua"
    },
    "TemporaryHostileRelationRemoved": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TemporaryHostileRelationRemoved\", 3, \"after\", function(enemy, sourceFaction, targetFaction) $1 end)"
        ],
        "description": "temporaryhostilerelationremoved listener",
        "prefix": "temporaryhostilerelationremoved",
        "scope": "lua"
    },
    "TemporaryHostileRelationRequestHandled": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TemporaryHostileRelationRequestHandled\", 3, \"after\", function(character1, character2, success) $1 end)"
        ],
        "description": "temporaryhostilerelationrequesthandled listener",
        "prefix": "temporaryhostilerelationrequesthandled",
        "scope": "lua"
    },
    "TextEvent": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TextEvent\", 1, \"after\", function(event) $1 end)"
        ],
        "description": "textevent listener",
        "prefix": "textevent",
        "scope": "lua"
    },
    "TimelineScreenFadeStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TimelineScreenFadeStarted\", 3, \"after\", function(userID, dialogInstanceId, dialog2) $1 end)"
        ],
        "description": "timelinescreenfadestarted listener",
        "prefix": "timelinescreenfadestarted",
        "scope": "lua"
    },
    "TimerFinished": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TimerFinished\", 1, \"after\", function(timer) $1 end)"
        ],
        "description": "timerfinished listener",
        "prefix": "timerfinished",
        "scope": "lua"
    },
    "TradeEnds": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TradeEnds\", 2, \"after\", function(character, trader) $1 end)"
        ],
        "description": "tradeends listener",
        "prefix": "tradeends",
        "scope": "lua"
    },
    "TradeGenerationEnded": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TradeGenerationEnded\", 1, \"after\", function(trader) $1 end)"
        ],
        "description": "tradegenerationended listener",
        "prefix": "tradegenerationended",
        "scope": "lua"
    },
    "TradeGenerationStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TradeGenerationStarted\", 1, \"after\", function(trader) $1 end)"
        ],
        "description": "tradegenerationstarted listener",
        "prefix": "tradegenerationstarted",
        "scope": "lua"
    },
    "TurnEnded": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TurnEnded\", 1, \"after\", function(object) $1 end)"
        ],
        "description": "turnended listener",
        "prefix": "turnended",
        "scope": "lua"
    },
    "TurnStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TurnStarted\", 1, \"after\", function(object) $1 end)"
        ],
        "description": "turnstarted listener",
        "prefix": "turnstarted",
        "scope": "lua"
    },
    "TutorialBoxClosed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TutorialBoxClosed\", 2, \"after\", function(character, message) $1 end)"
        ],
        "description": "tutorialboxclosed listener",
        "prefix": "tutorialboxclosed",
        "scope": "lua"
    },
    "TutorialClosed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TutorialClosed\", 2, \"after\", function(userId, entryId) $1 end)"
        ],
        "description": "tutorialclosed listener",
        "prefix": "tutorialclosed",
        "scope": "lua"
    },
    "TutorialEvent": {
        "body": [
            "Ext.Osiris.RegisterListener(\"TutorialEvent\", 2, \"after\", function(entity, event) $1 end)"
        ],
        "description": "tutorialevent listener",
        "prefix": "tutorialevent",
        "scope": "lua"
    },
    "UnequipFailed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"UnequipFailed\", 2, \"after\", function(item, character) $1 end)"
        ],
        "description": "unequipfailed listener",
        "prefix": "unequipfailed",
        "scope": "lua"
    },
    "Unequipped": {
        "body": [
            "Ext.Osiris.RegisterListener(\"Unequipped\", 2, \"after\", function(item, character) $1 end)"
        ],
        "description": "unequipped listener",
        "prefix": "unequipped",
        "scope": "lua"
    },
    "Unlocked": {
        "body": [
            "Ext.Osiris.RegisterListener(\"Unlocked\", 3, \"after\", function(item, character, key) $1 end)"
        ],
        "description": "unlocked listener",
        "prefix": "unlocked",
        "scope": "lua"
    },
    "UnlockedRecipe": {
        "body": [
            "Ext.Osiris.RegisterListener(\"UnlockedRecipe\", 2, \"after\", function(character, recipe) $1 end)"
        ],
        "description": "unlockedrecipe listener",
        "prefix": "unlockedrecipe",
        "scope": "lua"
    },
    "UseFinished": {
        "body": [
            "Ext.Osiris.RegisterListener(\"UseFinished\", 3, \"after\", function(character, item, sucess) $1 end)"
        ],
        "description": "usefinished listener",
        "prefix": "usefinished",
        "scope": "lua"
    },
    "UseStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"UseStarted\", 2, \"after\", function(character, item) $1 end)"
        ],
        "description": "usestarted listener",
        "prefix": "usestarted",
        "scope": "lua"
    },
    "UserAvatarCreated": {
        "body": [
            "Ext.Osiris.RegisterListener(\"UserAvatarCreated\", 3, \"after\", function(userID, avatar, daisy) $1 end)"
        ],
        "description": "useravatarcreated listener",
        "prefix": "useravatarcreated",
        "scope": "lua"
    },
    "UserCampChestChanged": {
        "body": [
            "Ext.Osiris.RegisterListener(\"UserCampChestChanged\", 2, \"after\", function(userID, chest) $1 end)"
        ],
        "description": "usercampchestchanged listener",
        "prefix": "usercampchestchanged",
        "scope": "lua"
    },
    "UserCharacterLongRested": {
        "body": [
            "Ext.Osiris.RegisterListener(\"UserCharacterLongRested\", 2, \"after\", function(character, isFullRest) $1 end)"
        ],
        "description": "usercharacterlongrested listener",
        "prefix": "usercharacterlongrested",
        "scope": "lua"
    },
    "UserConnected": {
        "body": [
            "Ext.Osiris.RegisterListener(\"UserConnected\", 3, \"after\", function(userID, userName, userProfileID) $1 end)"
        ],
        "description": "userconnected listener",
        "prefix": "userconnected",
        "scope": "lua"
    },
    "UserDisconnected": {
        "body": [
            "Ext.Osiris.RegisterListener(\"UserDisconnected\", 3, \"after\", function(userID, userName, userProfileID) $1 end)"
        ],
        "description": "userdisconnected listener",
        "prefix": "userdisconnected",
        "scope": "lua"
    },
    "UserEvent": {
        "body": [
            "Ext.Osiris.RegisterListener(\"UserEvent\", 2, \"after\", function(userID, userEvent) $1 end)"
        ],
        "description": "userevent listener",
        "prefix": "userevent",
        "scope": "lua"
    },
    "UserMakeWar": {
        "body": [
            "Ext.Osiris.RegisterListener(\"UserMakeWar\", 3, \"after\", function(sourceUserID, targetUserID, war) $1 end)"
        ],
        "description": "usermakewar listener",
        "prefix": "usermakewar",
        "scope": "lua"
    },
    "UsingSpell": {
        "body": [
            "Ext.Osiris.RegisterListener(\"UsingSpell\", 5, \"after\", function(caster, spell, spellType, spellElement, storyActionID) $1 end)"
        ],
        "description": "usingspell listener",
        "prefix": "usingspell",
        "scope": "lua"
    },
    "UsingSpellAtPosition": {
        "body": [
            "Ext.Osiris.RegisterListener(\"UsingSpellAtPosition\", 8, \"after\", function(caster, x, y, z, spell, spellType, spellElement, storyActionID) $1 end)"
        ],
        "description": "usingspellatposition listener",
        "prefix": "usingspellatposition",
        "scope": "lua"
    },
    "UsingSpellInTrigger": {
        "body": [
            "Ext.Osiris.RegisterListener(\"UsingSpellInTrigger\", 6, \"after\", function(caster, spell, spellType, spellElement, trigger, storyActionID) $1 end)"
        ],
        "description": "usingspellintrigger listener",
        "prefix": "usingspellintrigger",
        "scope": "lua"
    },
    "UsingSpellOnTarget": {
        "body": [
            "Ext.Osiris.RegisterListener(\"UsingSpellOnTarget\", 6, \"after\", function(caster, target, spell, spellType, spellElement, storyActionID) $1 end)"
        ],
        "description": "usingspellontarget listener",
        "prefix": "usingspellontarget",
        "scope": "lua"
    },
    "UsingSpellOnZoneWithTarget": {
        "body": [
            "Ext.Osiris.RegisterListener(\"UsingSpellOnZoneWithTarget\", 6, \"after\", function(caster, target, spell, spellType, spellElement, storyActionID) $1 end)"
        ],
        "description": "usingspellonzonewithtarget listener",
        "prefix": "usingspellonzonewithtarget",
        "scope": "lua"
    },
    "VoiceBarkEnded": {
        "body": [
            "Ext.Osiris.RegisterListener(\"VoiceBarkEnded\", 2, \"after\", function(bark, instanceID) $1 end)"
        ],
        "description": "voicebarkended listener",
        "prefix": "voicebarkended",
        "scope": "lua"
    },
    "VoiceBarkFailed": {
        "body": [
            "Ext.Osiris.RegisterListener(\"VoiceBarkFailed\", 1, \"after\", function(bark) $1 end)"
        ],
        "description": "voicebarkfailed listener",
        "prefix": "voicebarkfailed",
        "scope": "lua"
    },
    "VoiceBarkStarted": {
        "body": [
            "Ext.Osiris.RegisterListener(\"VoiceBarkStarted\", 2, \"after\", function(bark, instanceID) $1 end)"
        ],
        "description": "voicebarkstarted listener",
        "prefix": "voicebarkstarted",
        "scope": "lua"
    },
    "WentOnStage": {
        "body": [
            "Ext.Osiris.RegisterListener(\"WentOnStage\", 2, \"after\", function(object, isOnStageNow) $1 end)"
        ],
        "description": "wentonstage listener",
        "prefix": "wentonstage",
        "scope": "lua"
    }
}